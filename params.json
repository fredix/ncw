{"tagline":"nodecast agent worker","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Ncw","google":"","body":"### Welcome to Nodecast agent worker.\r\n\r\nNCW is an agent which is connected to [NCS](http://nodecast.github.com/ncs/). It is using [Zeromq](http://www.zeromq.org) for communicate and monitoring.\r\n\r\nNCW fork your worker, so it send to STDIN the payloads received from NCS, also it get the worker's response to STDOUT and send it to NCS.\r\n\r\n### USAGE\r\nNCW needs three steps before using it.\r\n\r\n1. create a user into MongoDB\r\n\r\ncreate user collection in the _nodecast_prod_ database (in the futur this is will be done through an HTTP API)\r\n\r\n```\r\ndoc = { login : 'user', email : 'user@email.com', authentication_token : 'token'}\r\ndb.users.insert(doc);\r\n```\r\n\r\n\r\n2. create a node\r\n\r\na node is to be identify the host where yours payloads come from. You should create a node for each physical or virtual server.\r\n\r\n```\r\n$ curl -H X-nodename: \"your-node-name\" --user \"email:token\" http://ncs-ip:4567/node/create\r\n```\r\n\r\nreturn a node uuid :\r\n\r\n```\r\n$ {\"node_password\":\"e6cc13a3-1236-46cb-b40f-a66650ab5eef\",\"node_uuid\":\"2d0a7780-e8fe-4e0a-89c6-a5a2737b095a\"}\r\n```\r\n\r\n3. create a workflow\r\n\r\nNodecast need a workflow before scheduling your task.\r\n\r\n```\r\n$ curl -H \"X-workflow: test\" -d '{ \"worker1\": 1, \"worker2\": 2 }' --user \"user@email.com:token\" http://127.0.0.1:4567/workflow/create\r\n```\r\n\r\nreturn a workflow uuid : \r\n\r\n```\r\n$ {\"uuid\":\"0ebcdab6-0263-42d3-be7d-9602fa15f68c\"}\r\n```\r\n\r\n\r\n### LAUNCH\r\nNow your can launch NCW with node's uuid. Your worker need to output a json with the worflow's uuid to forward the output to the worker2.\r\n\r\n```\r\nncw --ncs-ip=127.0.0.1 --ncs-port=5569 --node-uuid=2d0a7780-e8fe-4e0a-89c6-a5a2737b095a --node-password=e6cc13a3-1236-46cb-b40f-a66650ab5eef --worker-type=service --worker-name=\"worker1\" --exec=\"worker1.bin\" --stdout=true --directory=/home/user/worker_data/\r\n```\r\n\r\n### SCALABILITY\r\n\r\nYou can easily scale your backend. For that, just launch any instance of your worker on different host, nodecast will distribute your payload to a worker which is idle in your poll.  Your tasks are distributed and treatments are parallelized.\r\n\r\n### Contact\r\n@fredix\r\n\r\nemail : fredix at nodecast do net\r\n\r\nirc : #nodecast on irc.freenode.net"}